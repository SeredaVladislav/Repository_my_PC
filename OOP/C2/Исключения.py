# ---------------------------------------------- Исключения ------------------------------------------------------------

# Исключения — это такие ошибки, которые возникают не во время компиляции программы, а в процессе её исполнения,
# в случаях, если что-то идёт не так.

# Название исключения---------------------------Когда возникает----------------------------------------Название в Python

# Возникающее при делении на 0------------------При делении на ноль.-----------------------------------ZeroDivisionError
# Ошибка значения-------------------------При невозможности привести один тип к другому.----------------------ValueError
# Файл не найден---------------------Открыть файл для чтения, который не был создан.-------------------FileNotFoundError
# Недостаточно прав------------------Запуск программы не от имени администратора.------------------------PermissionError


c = 1 / 0
print(c)  # ZeroDivisionError: division by zero

print("Перед исключением")
# теперь пользователь сам вводит числа для деления
a = int(input("a: "))
b = int(input("b: "))
c = a / b  # здесь может возникнуть исключение деления на ноль
print(c)  # печатаем c = a / b если всё хорошо
print("После исключения")

# Чтобы программа не вылетала при ошибке нужна конструкция try-except.

try:  # Добавляем конструкцию try-except для отлова ошибки
    print("Перед исключением")
    # теперь пользователь сам вводит числа для деления
    a = int(input("a: "))
    b = int(input("b: "))
    c = a / b  # здесь может возникнуть исключение деления на ноль
    print(c)  # печатаем c = a / b если всё хорошо
except ZeroDivisionError as e:  # Добавляем тип именно той ошибки которую хотим отловить.
    print(e)  # Выводим информацию об ошибке
    print("После исключения")

print("После После исключения")

# ----------------------------------------------------------------------------------------------------------------------

try:
    print("Перед исключением")
    a = int(input("a: "))
    b = int(input("b: "))
    c = a / b
    print(c)  # печатаем c = a / b если всё хорошо
except ZeroDivisionError as e:
    print("После исключения")
else:  # код в блоке else выполняется только в том случае, если код в блоке try выполнился успешно
    # (т.е. не вылетело никакого исключения).
    print("Всё ништяк")
finally:  # код в блоке finally выполнится в любом случае, при выходе из try-except
    print("Finally на месте")

print("После После исключения")

# ----------------------------------------------------------------------------------------------------------------------

age = int(input("Сколько тебе лет?"))

if age > 100 or age <= 0:
    raise ValueError("Тебе не может быть столько лет")

print(f"Тебе {age} лет!")  # Возраст выводится только, если пользователь ввёл правильный возраст.

# ----------------------------------------------------------------------------------------------------------------------

try:
    age = int(input("Сколько тебе лет?"))

    if age > 100 or age <= 0:
        raise ValueError("Тебе не может быть столько лет")

    # Возраст выводится только, если пользователь ввёл правильный возраст.
    print(f"Тебе {age} лет!")
except ValueError:
    print("Неправильный возраст")


# ----------------------------------------------------------------------------------------------------------------------
#
# try:
#     *код, который может вызвать ту или иную ошибку*
# except *ошибка*:
#     *код, который выполнится в случае возникновения ошибки*
# else:
#     *код, который выполнится только в случае если в try ничего не сломалось*
# finally:
#     *код, который выполнится в любом случае*

def send_email(email):
    if '@' not in email:
        raise ValueError('Неправильный email')
    return email


try:
    print(send_email('df@sdf'))
except ValueError as e:
    print(e)
else:
    print("Вывели если все ОК!")
finally:
    print("Вывели код, в любом случае")

# ----------------------------------------------------------------------------------------------------------------------

try:
    a = input("Введите число: ")
    num = int(a)

except ValueError as e:
    print('Строка не является числом!')

else:
    print('Вы ввели правильное число')

finally:
    print('Выход из программы')


# ----------------------------------------------------------------------------------------------------------------------

def send_email(email):
    if '@' not in email:
        raise ValueError('Неправильный email')


send_email('dfsdf')


# -----------------------------------------------
def send_email(email):
    if '@' not in email:
        raise ValueError('Неправильный email')


try:
    send_email('dfsdf')
except ValueError as e:
    print(e)

# -----------------------------------------------------------------


while True:
    try:
        a, b = [int(input("Введите числа: ")) for _ in range(2)]
    except ValueError as e:
        print("Вводятся только числа!")
        continue
    user = input("Введите знак операции: ")
    if b == 0 and user == '/':
        print("Деление на 0 невозможно!")
        continue
    elif user in '0':
        print("Программа завершена!")
        break
    elif user in '+':
        a += b
    elif user in '-':
        a -= b
    elif user in '*':
        a *= b
    elif user in '/':
        a /= b
    else:
        print("Ошибка, при вводе знака операции, попробуйте заново!")
        continue
    print(a)
